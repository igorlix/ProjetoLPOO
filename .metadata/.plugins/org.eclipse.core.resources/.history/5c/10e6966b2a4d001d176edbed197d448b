package controle;

import javax.swing.*;

import modelos.blocos;

public class movimento 
{
	//velocidade do movimento dos blocos//
    public static final int movimento = 0;
    public static int larg = blocos.WIDTH;

    public static void movimentoBlocos(blocos blocos, blocos espacoVazio, JPanel painel) 
    {
        String direcao = moverParaDirecao(blocos, espacoVazio);

        int posicaoX = blocos.getX();
        int posicaoY = blocos.getY();

        switch (direcao) 
        {
            case "Esquerda":
                new Thread(() -> 
                {
                    for (int i = 0; i < larg; i++) 
                    {
                        try 
                        {
                            Thread.sleep(movimento);
                        } catch (InterruptedException esq) 
                        {
                            esq.printStackTrace();
                        }
                        blocos.setX(blocos.getX() - 1);
                        moveEspacoVazio(espacoVazio, posicaoX, posicaoY);
                        painel.repaint();
                    }
                }
                ).start();
                break;
            case "Direita":
                new Thread(() -> 
                {
                    for (int i = 0; i < larg; i++) 
                    {
                        try 
                        {
                            Thread.sleep(movimento);
                        } catch (InterruptedException dir) 
                        {
                            dir.printStackTrace();
                        }
                        blocos.setX(blocos.getX() + modelos.blocos.WIDTH / larg);
                        moveEspacoVazio(espacoVazio, posicaoX, posicaoY);
                        painel.repaint();
                    }
                }
                ).start();
                break;
            case "Cima":
                new Thread(() -> 
                {
                    for (int i = 0; i < larg; i++) 
                    {
                        try 
                        {
                            Thread.sleep(movimento);
                        } catch (InterruptedException cima) 
                        {
                            cima.printStackTrace();
                        }
                        moveEspacoVazio(espacoVazio, posicaoX, posicaoY);
                        blocos.setY(blocos.getY() - modelos.blocos.HEIGHT / larg);
                        painel.repaint();
                    }
                }
                ).start();
                break;
            case "Baixo":
                new Thread(() -> {
                    for (int i = 0; i < larg; i++) {
                        try {
                            Thread.sleep(movimento);
                        } catch (InterruptedException e) {
                            e.printStackTrace();
                        }
                        blocos.setY(blocos.getY() + modelos.blocos.HEIGHT / larg);
                        moveEspacoVazio(espacoVazio, posicaoX, posicaoY);
                        painel.repaint();
                    }
                }
                ).start();
                break;
        }
    }

    private static void moveEspacoVazio(blocos espacoVazio, int posicaoX, int posicaoY) 
    {
        espacoVazio.setX(posicaoX);
        espacoVazio.setY(posicaoY);
    }

    public static String moverParaDirecao(blocos blocos, blocos espacoVazio) 
    {

        if (blocos.getX() > espacoVazio.getX() && blocos.getY() == espacoVazio.getY())
            return "LEFT";

        if (blocos.getX() < espacoVazio.getX() && blocos.getY() == espacoVazio.getY())
            return "RIGHT";

        if (blocos.getY() > espacoVazio.getY() && blocos.getX() == espacoVazio.getX())
            return "UP";

        if (blocos.getY() < espacoVazio.getY() && blocos.getX() == espacoVazio.getX())
            return "DOWN";

        return "UNKNOWN";
    }

}